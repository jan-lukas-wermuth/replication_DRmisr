"0","MeanCorrelation <- function(x, y, ...){"
"0","  numerator <- cor(x, y, method = ""pearson"", ...)"
"0","  if (cor(x, y, method = ""pearson"", ...)>=0){"
"0","    denominator <- cor(sort(x), sort(y), method = ""pearson"", ...)"
"0","    MeanCorrelation <- numerator / abs(denominator)"
"0","  }"
"0","  else {"
"0","    denominator <- cor(sort(x), sort(y, decreasing = TRUE), method = ""pearson"", ...)"
"0","    MeanCorrelation <- numerator / abs(denominator)"
"0","  }"
"0","  return(MeanCorrelation)"
"0","}"
"0","MeanGradeCorrelation <- function(x, y, ...){"
"0","  numerator <- cor(x, y, method = ""spearman"", ...)"
"0","  if (cor(x, y, method = ""spearman"", ...) >= 0){"
"0","    denominator <- cor(sort(x), sort(y), method = ""spearman"", ...)"
"0","    MeanGradeCorrelation <- numerator / abs(denominator)"
"0","  }"
"0","  else {"
"0","    denominator <- cor(sort(x), sort(y, decreasing = TRUE), method = ""spearman"", ...)"
"0","    MeanGradeCorrelation <- numerator / abs(denominator)"
"0","  }"
"0","  return(MeanGradeCorrelation)"
"0","}"
"0","GenestNeslehovaTau <- function(x, y, ...){"
"0","  numerator <- (ConDisPairs(table(x, y))$C-ConDisPairs(table(x, y))$D)/choose(length(x),2)"
"0","  if ((ConDisPairs(table(x, y))$C-ConDisPairs(table(x, y))$D)/choose(length(x),2) >= 0){"
"0","    denominator <- (ConDisPairs(table(sort(x), sort(y)))$C-ConDisPairs(table(sort(x), sort(y)))$D)/choose(length(x),2)"
"0","    GenestNeslehovaTau <- numerator / abs(denominator)"
"0","  }"
"0","  else {"
"0","    denominator <- (ConDisPairs(table(sort(x), sort(y, decreasing = TRUE)))$C-ConDisPairs(table(sort(x), sort(y, decreasing = TRUE)))$D)/choose(length(x),2)"
"0","    GenestNeslehovaTau <- numerator / abs(denominator)"
"0","  }"
"0","  return(GenestNeslehovaTau)"
"0","}"
"0","# Insert variable1 and variable2 as strings, e.g. ""MET"""
"0","comparison_ordinal <- function(variable1, variable2){"
"0","  df <- na.omit(data.frame(as.numeric(da37416.0001[, variable1]), as.numeric(da37416.0001[, variable2])))"
"0","  X <- df[,1]"
"0","  Y <- df[,2]"
"0","  n <- length(X)"
"0","  pearson_r <- cor(X, Y, method = ""pearson"")"
"0","  kendall_tau <- (ConDisPairs(table(X, Y))$C-ConDisPairs(table(X, Y))$D)/choose(n,2)"
"0","  kendall_tau_b <- cor.fk(X, Y)"
"0","  spearman_rho <- 12 * (n - 1) / n^3 * cov(X, Y, method = ""spearman"")"
"0","  mean_cor <- MeanCorrelation(X, Y)"
"0","  mean_grade_cor <- MeanGradeCorrelation(X, Y)"
"0","  genest_tau <- GenestNeslehovaTau(X, Y)"
"0","  gamma = GoodmanKruskalGamma(X, Y)"
"0","  result <- list(""pearson_r"" = pearson_r, ""kendall_tau"" = kendall_tau, ""kendall_tau_b"" = kendall_tau_b, ""spearman_rho"" = spearman_rho, ""mean_cor"" = mean_cor, ""mean_grade_cor"" = mean_grade_cor, ""genest_tau"" = genest_tau, ""gamma"" = gamma)"
"0","  return(result)"
"0","}"
"0","plot_contour_matrix <- function(mat, xlab, ylab, bins){"
"0","  drug_d <- c(""MET"", ""MDM"", ""CIG"", ""ALC"", ""MAR"", ""LSD"", ""PSY"", ""COK"", ""AMP"", ""SED"""
"0","            , ""TRQ"", ""HER"", ""NAR"", ""CRA"")"
"0","  # Order drugs with respect to their use (most used drugs at the beginning)"
"0","  drug_d_marg <- rep(NA, length(drug_d))"
"0","  k <- 1"
"0","  for (i in drug_d) {"
"0","    drug_d_marg[k] <- table(as.numeric(da37416.0001[, i]))[[1]]/sum(!is.na(as.numeric(da37416.0001[, i])))"
"0","    k <- k+1"
"0","  }"
"0","  drug_d_sorted <- as.factor(sort(fct_reorder(drug_d, drug_d_marg)))"
"0","  drug_d_sorted_desc <- as.factor(sort(fct_reorder(drug_d, drug_d_marg, .desc = TRUE)))"
"0","  "
"0","  data <- expand_grid(x = drug_d_sorted, y = drug_d_sorted_desc)"
"0",""
"0","  z <- rep(NA, dim(mat)[1] ^ 2)"
"0","  for (i in 1 : dim(mat)[1]){"
"0","    for (j in 1 : dim(mat)[1]){"
"0","      z[(i - 1) * dim(mat)[1] + j] <- mat[j, i]"
"0","    }"
"0","  }"
"0","  "
"0","  data <- mutate(data, z) "
"0","  "
"0","  labels <- rep("""", bins + 1)"
"0","  "
"0","  addlabels <- seq(from = -1, to = 1, length.out = 11)"
"0","  "
"0","  addlabelsat <- seq(from = 1, to = bins + 1, length.out = 11)"
"0","  "
"0","  labels[addlabelsat] <- addlabels"
"0","  "
"0","  g <- ggplot(data, aes(x = x, y = y, fill = z)) +"
"0","    geom_tile() +"
"0","    scale_fill_stepsn(n.breaks = bins, colors = hcl.colors(20, ""Spectral""), limits = c(-1, 1), labels = labels) +"
"0","    guides(fill = guide_colourbar(title = NULL, ticks = FALSE, barheight = 10)) +"
"0","    xlab(xlab) +"
"0","    ylab(ylab)"
"0","  g"
"0","  # ""Green-Brown"" or ""Blue-Red 3"" instead of ""Spectral"" are colorblind-safe, but for smaller ranges of values do not distinguish as well"
"0","}"
