y_l = rep(y_values_lower, rep(2, 5)),
y_u = rep(y_values_upper, rep(2, 5)))
p14 <- ggplot2::ggplot(data = data) +
geom_segment(aes(x = x, y = y, xend = 1:5, yend = y)) +
geom_ribbon(data = ribbon_data, aes(x = x, ymin = y_l, ymax = y_u), alpha = 0.5) +
xlab("y") + ylab("p") + theme_bw() + ylim(c(0,1))
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(0_0)_rec.pdf"), plot = p11, device = cairo_pdf, width = 5, height = 5)
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(1_0)_rec.pdf"), plot = p12, device = cairo_pdf, width = 5, height = 5)
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(0_1)_rec.pdf"), plot = p13, device = cairo_pdf, width = 5, height = 5)
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(1_1)_rec.pdf"), plot = p14, device = cairo_pdf, width = 5, height = 5)
x_values <- 0:4
y_values_lower <- c(`B_(0|0)_restr`(1, p, drug)[1], `B_(0|0)_restr`(2, p, drug)[1], `B_(0|0)_restr`(3, p, drug)[1], `B_(0|0)_restr`(4, p, drug)[1], `B_(0|0)_restr`(5, p, drug)[1])
y_values_upper <- c(`B_(0|0)_restr`(1, p, drug)[2], `B_(0|0)_restr`(2, p, drug)[2], `B_(0|0)_restr`(3, p, drug)[2], `B_(0|0)_restr`(4, p, drug)[2], `B_(0|0)_restr`(5, p, drug)[2])
y_values <- c(`F_(0|0)`(1, drug), `F_(0|0)`(2, drug), `F_(0|0)`(3, drug), `F_(0|0)`(4, drug), `F_(0|0)`(5, drug))
data <- data.frame(x = x_values, y_l = y_values_lower, y_u = y_values_upper, y = y_values)
ribbon_data <-
tibble(
x = c(0, 1 - .Machine$double.eps, 1, 2 - .Machine$double.eps, 2, 3 - .Machine$double.eps, 3, 4 - .Machine$double.eps, 4, 5 - .Machine$double.eps),
y_l = rep(y_values_lower, rep(2, 5)),
y_u = rep(y_values_upper, rep(2, 5)))
p15 <- ggplot2::ggplot(data = data) +
geom_segment(aes(x = x, y = y, xend = 1:5, yend = y)) +
geom_ribbon(data = ribbon_data, aes(x = x, ymin = y_l, ymax = y_u), alpha = 0.5) +
xlab("y") + ylab("p") + theme_bw() + ylim(c(0,1))
# (1|0)
x_values <- 0:4
y_values_lower <- c(`B_(1|0)_restr`(1, p, drug)[1], `B_(1|0)_restr`(2, p, drug)[1], `B_(1|0)_restr`(3, p, drug)[1], `B_(1|0)_restr`(4, p, drug)[1], `B_(1|0)_restr`(5, p, drug)[1])
y_values_upper <- c(`B_(1|0)_restr`(1, p, drug)[2], `B_(1|0)_restr`(2, p, drug)[2], `B_(1|0)_restr`(3, p, drug)[2], `B_(1|0)_restr`(4, p, drug)[2], `B_(1|0)_restr`(5, p, drug)[2])
y_values <- c(`F_(1|0)`(1, drug), `F_(1|0)`(2, drug), `F_(1|0)`(3, drug), `F_(1|0)`(4, drug), `F_(1|0)`(5, drug))
data <- data.frame(x = x_values, y_l = y_values_lower, y_u = y_values_upper, y = y_values)
ribbon_data <-
tibble(
x = c(0, 1 - .Machine$double.eps, 1, 2 - .Machine$double.eps, 2, 3 - .Machine$double.eps, 3, 4 - .Machine$double.eps, 4, 5 - .Machine$double.eps),
y_l = rep(y_values_lower, rep(2, 5)),
y_u = rep(y_values_upper, rep(2, 5)))
p16 <- ggplot2::ggplot(data = data) +
geom_segment(aes(x = x, y = y, xend = 1:5, yend = y)) +
geom_ribbon(data = ribbon_data, aes(x = x, ymin = y_l, ymax = y_u), alpha = 0.5) +
xlab("y") + ylab("p") + theme_bw() + ylim(c(0,1))
# (0|1)
x_values <- 0:4
y_values_lower <- c(`B_(0|1)_restr`(1, p, drug)[1], `B_(0|1)_restr`(2, p, drug)[1], `B_(0|1)_restr`(3, p, drug)[1], `B_(0|1)_restr`(4, p, drug)[1], `B_(0|1)_restr`(5, p, drug)[1])
y_values_upper <- c(`B_(0|1)_restr`(1, p, drug)[2], `B_(0|1)_restr`(2, p, drug)[2], `B_(0|1)_restr`(3, p, drug)[2], `B_(0|1)_restr`(4, p, drug)[2], `B_(0|1)_restr`(5, p, drug)[2])
y_values <- c(`F_(0|1)`(1, drug), `F_(0|1)`(2, drug), `F_(0|1)`(3, drug), `F_(0|1)`(4, drug), `F_(0|1)`(5, drug))
data <- data.frame(x = x_values, y_l = y_values_lower, y_u = y_values_upper, y = y_values)
ribbon_data <-
tibble(
x = c(0, 1 - .Machine$double.eps, 1, 2 - .Machine$double.eps, 2, 3 - .Machine$double.eps, 3, 4 - .Machine$double.eps, 4, 5 - .Machine$double.eps),
y_l = rep(y_values_lower, rep(2, 5)),
y_u = rep(y_values_upper, rep(2, 5)))
p17 <- ggplot2::ggplot(data = data) +
geom_segment(aes(x = x, y = y, xend = 1:5, yend = y)) +
geom_ribbon(data = ribbon_data, aes(x = x, ymin = y_l, ymax = y_u), alpha = 0.5) +
xlab("y") + ylab("p") + theme_bw() + ylim(c(0,1))
# (1|1)
x_values <- 0:4
y_values_lower <- c(`B_(1|1)_restr`(1, p, drug)[1], `B_(1|1)_restr`(2, p, drug)[1], `B_(1|1)_restr`(3, p, drug)[1], `B_(1|1)_restr`(4, p, drug)[1], `B_(1|1)_restr`(5, p, drug)[1])
y_values_upper <- c(`B_(1|1)_restr`(1, p, drug)[2], `B_(1|1)_restr`(2, p, drug)[2], `B_(1|1)_restr`(3, p, drug)[2], `B_(1|1)_restr`(4, p, drug)[2], `B_(1|1)_restr`(5, p, drug)[2])
y_values <- c(`F_(1|1)`(1, drug), `F_(1|1)`(2, drug), `F_(1|1)`(3, drug), `F_(1|1)`(4, drug), `F_(1|1)`(5, drug))
data <- data.frame(x = x_values, y_l = y_values_lower, y_u = y_values_upper, y = y_values)
ribbon_data <-
tibble(
x = c(0, 1 - .Machine$double.eps, 1, 2 - .Machine$double.eps, 2, 3 - .Machine$double.eps, 3, 4 - .Machine$double.eps, 4, 5 - .Machine$double.eps),
y_l = rep(y_values_lower, rep(2, 5)),
y_u = rep(y_values_upper, rep(2, 5)))
p18 <- ggplot2::ggplot(data = data) +
geom_segment(aes(x = x, y = y, xend = 1:5, yend = y)) +
geom_ribbon(data = ribbon_data, aes(x = x, ymin = y_l, ymax = y_u), alpha = 0.5) +
xlab("y") + ylab("p") + theme_bw() + ylim(c(0,1))
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(0_0)_restr_rec.pdf"), plot = p15, device = cairo_pdf, width = 5, height = 5)
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(1_0)_restr_rec.pdf"), plot = p16, device = cairo_pdf, width = 5, height = 5)
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(0_1)_restr_rec.pdf"), plot = p17, device = cairo_pdf, width = 5, height = 5)
ggsave(filename = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Plots/DistributionRegression_201520172019_rec/DR/", drug, "/(1_1)_restr_rec.pdf"), plot = p18, device = cairo_pdf, width = 5, height = 5)
}
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
rm(list = ls())
library(dplyr)
library(haven)
library(stringr)
library(readxl)
library(naniar)
data_folder <- "~/Dropbox/GLW/replication_DRmisr/data"
paste(data_folder, "sadc_2019_state_a_m.sav", sep = "/")
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
load("~/replication_DRmisr/data/yrbs_data_combined_201520172019.RData")
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019.RData")
source("functions/MisreportingY_functions.R")
yrbs_data_combined_201520172019$mar_life <- pmax(as.numeric(as.character(yrbs_data_combined_201520172019$q45)), as.numeric(as.character(yrbs_data_combined_201520172019$q48)), na.rm = TRUE)
# Choose variables and remove NAs (split by marijuana recreational legalization status)
j <- 0
for (i in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", i, "mar_life", sep = "_"), yrbs_data_combined_201520172019 %>%
dplyr::select(year, mar_life, sex, minority, median_income, unemployment_rate, recreational, mar_prices_medium, questions, age) %>%
na.omit() %>%
dplyr::filter(recreational == j) %>%
dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
j <- j + 1
}
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019.RData")
source("functions/MisreportingY_functions.R")
yrbs_data_combined_201520172019$mar_life <- pmax(as.numeric(as.character(yrbs_data_combined_201520172019$q45)), as.numeric(as.character(yrbs_data_combined_201520172019$q48)), na.rm = TRUE)
# Choose variables and remove NAs (split by marijuana recreational legalization status)
j <- 0
for (i in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", i, "mar_life", sep = "_"), yrbs_data_combined_201520172019 %>%
dplyr::select(year, mar_life, sex, minority, median_income, unemployment_rate, recreational, mar_prices_medium, questions, age) %>%
na.omit() %>%
dplyr::filter(recreational == j) %>%
dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
j <- j + 1
}
# Initialize lists in which all y-vectors get stored
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), list())
}
# Fill the lists with y-vectors: First element represents 1 vs 2-6, second 1-2 vs 3-6 etc.
for (i in 1:6) { # Note that cigarettes consumption has one answer option more than marijuana consumption!
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), append(get(paste("mar_life", "30days_binary", j, sep = "_")), list(0 + (as.numeric(as.matrix(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))["mar_life"])) > i))))
}
}
View(mar_life_30days_binary_recreational)
# add all the new vectors to the df
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), cbind(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), do.call(cbind, get(paste("mar_life", "30days_binary", j, sep = "_")))))
}
View(yrbs_data_combined_201520172019_norecreational_mar_life)
# and rename the columns accordingly
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% rename(!!!setNames(as.character(1:6), paste("mar_life", 1:6, sep = ""))) %>% select(-2))
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), as.data.frame(cbind(scale(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,1:12]), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,13:18])))
save(list = paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), file = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/", paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), ".RData"))
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("~/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results/DistributionRegression_201520172019_rec", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("/results/DistributionRegression_201520172019_rec", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results/DistributionRegression_201520172019_rec", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
j <- "norecreational"
k <- 1
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
paste("results/DistributionRegression_201520172019_rec", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/")
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019.RData")
source("functions/MisreportingY_functions.R")
yrbs_data_combined_201520172019$mar_life <- pmax(as.numeric(as.character(yrbs_data_combined_201520172019$q45)), as.numeric(as.character(yrbs_data_combined_201520172019$q48)), na.rm = TRUE)
# Choose variables and remove NAs (split by marijuana recreational legalization status)
j <- 0
for (i in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", i, "mar_life", sep = "_"), yrbs_data_combined_201520172019 %>%
dplyr::select(year, mar_life, sex, minority, median_income, unemployment_rate, recreational, mar_prices_medium, questions, age) %>%
na.omit() %>%
dplyr::filter(recreational == j) %>%
dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
j <- j + 1
}
# Initialize lists in which all y-vectors get stored
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), list())
}
# Fill the lists with y-vectors: First element represents 1 vs 2-6, second 1-2 vs 3-6 etc.
for (i in 1:6) { # Note that cigarettes consumption has one answer option more than marijuana consumption!
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), append(get(paste("mar_life", "30days_binary", j, sep = "_")), list(0 + (as.numeric(as.matrix(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))["mar_life"])) > i))))
}
}
# add all the new vectors to the df
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), cbind(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), do.call(cbind, get(paste("mar_life", "30days_binary", j, sep = "_")))))
}
# and rename the columns accordingly
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% rename(!!!setNames(as.character(1:6), paste("mar_life", 1:6, sep = ""))) %>% select(-2))
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), as.data.frame(cbind(scale(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,1:12]), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,13:18])))
save(list = paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), file = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/", paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), ".RData"))
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
# Distribution Regression: Recreational Legalization vs No recreational Legalization -----------------------------------------------------------
for (j in c("norecreational", "recreational")) {
assign(paste("X", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% select(-c(paste0("mar_life", 1:6), "recreational", "year", "age", "year_2017", "year_2019")))
save(list = paste("X", j, "mar_life", sep = "_"), file = paste0("results/", paste("X", j, "mar_life", sep = "_"), ".RData"))
}
library(GJRM)
library(doParallel)
################ Step 2: Compute robust standard errors ####################
################ Plots ####################
p <- 0.9
drug <- "mar_life"
`B_(1|1)-(0|0)`(1, p, drug)
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
library(GJRM)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019.RData")
source("functions/MisreportingY_functions.R")
yrbs_data_combined_201520172019$mar_life <- pmax(as.numeric(as.character(yrbs_data_combined_201520172019$q45)), as.numeric(as.character(yrbs_data_combined_201520172019$q48)), na.rm = TRUE)
# Choose variables and remove NAs (split by marijuana recreational legalization status)
j <- 0
for (i in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", i, "mar_life", sep = "_"), yrbs_data_combined_201520172019 %>%
dplyr::select(year, mar_life, sex, minority, median_income, unemployment_rate, recreational, mar_prices_medium, questions, age) %>%
na.omit() %>%
dplyr::filter(recreational == j) %>%
dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
j <- j + 1
}
# Initialize lists in which all y-vectors get stored
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), list())
}
# Fill the lists with y-vectors: First element represents 1 vs 2-6, second 1-2 vs 3-6 etc.
for (i in 1:6) { # Note that cigarettes consumption has one answer option more than marijuana consumption!
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), append(get(paste("mar_life", "30days_binary", j, sep = "_")), list(0 + (as.numeric(as.matrix(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))["mar_life"])) > i))))
}
}
# add all the new vectors to the df
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), cbind(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), do.call(cbind, get(paste("mar_life", "30days_binary", j, sep = "_")))))
}
# and rename the columns accordingly
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% rename(!!!setNames(as.character(1:6), paste("mar_life", 1:6, sep = ""))) %>% select(-2))
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), as.data.frame(cbind(scale(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,1:12]), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,13:18])))
save(list = paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), file = paste0("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/", paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), ".RData"))
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results/GJRM_results", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
# Distribution Regression: Recreational Legalization vs No recreational Legalization -----------------------------------------------------------
for (j in c("norecreational", "recreational")) {
assign(paste("X", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% select(-c(paste0("mar_life", 1:6), "recreational", "year", "age", "year_2017", "year_2019")))
save(list = paste("X", j, "mar_life", sep = "_"), file = paste0("results/", paste("X", j, "mar_life", sep = "_"), ".RData"))
}
j
paste0("results", paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), ".RData")
paste0("results/", paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), ".RData")
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
library(GJRM)
library(doParallel)
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
library(GJRM)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019.RData")
source("functions/MisreportingY_functions.R")
yrbs_data_combined_201520172019$mar_life <- pmax(as.numeric(as.character(yrbs_data_combined_201520172019$q45)), as.numeric(as.character(yrbs_data_combined_201520172019$q48)), na.rm = TRUE)
# Choose variables and remove NAs (split by marijuana recreational legalization status)
j <- 0
for (i in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", i, "mar_life", sep = "_"), yrbs_data_combined_201520172019 %>%
dplyr::select(year, mar_life, sex, minority, median_income, unemployment_rate, recreational, mar_prices_medium, questions, age) %>%
na.omit() %>%
dplyr::filter(recreational == j) %>%
dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
j <- j + 1
}
# Initialize lists in which all y-vectors get stored
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), list())
}
# Fill the lists with y-vectors: First element represents 1 vs 2-6, second 1-2 vs 3-6 etc.
for (i in 1:6) { # Note that cigarettes consumption has one answer option more than marijuana consumption!
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), append(get(paste("mar_life", "30days_binary", j, sep = "_")), list(0 + (as.numeric(as.matrix(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))["mar_life"])) > i))))
}
}
# add all the new vectors to the df
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), cbind(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), do.call(cbind, get(paste("mar_life", "30days_binary", j, sep = "_")))))
}
# and rename the columns accordingly
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% rename(!!!setNames(as.character(1:6), paste("mar_life", 1:6, sep = ""))) %>% select(-2))
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), as.data.frame(cbind(scale(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,1:12]), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,13:18])))
save(list = paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), file = paste0("data/", paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), ".RData"))
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results/GJRM_results", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
rm(list = ls())
library(ggplot2)
library(Cairo)
library(dplyr)
library(labelled)
library(mnormt)
library(dplyr)
library(GJRM)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019.RData")
yrbs_data_combined_201520172019$mar_life <- pmax(as.numeric(as.character(yrbs_data_combined_201520172019$q45)), as.numeric(as.character(yrbs_data_combined_201520172019$q48)), na.rm = TRUE)
# Choose variables and remove NAs (split by marijuana recreational legalization status)
j <- 0
for (i in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", i, "mar_life", sep = "_"), yrbs_data_combined_201520172019 %>%
dplyr::select(year, mar_life, sex, minority, median_income, unemployment_rate, recreational, mar_prices_medium, questions, age) %>%
na.omit() %>%
dplyr::filter(recreational == j) %>%
dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
j <- j + 1
}
# Initialize lists in which all y-vectors get stored
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), list())
}
# Fill the lists with y-vectors: First element represents 1 vs 2-6, second 1-2 vs 3-6 etc.
for (i in 1:6) { # Note that cigarettes consumption has one answer option more than marijuana consumption!
for (j in c("norecreational", "recreational")) {
assign(paste("mar_life", "30days_binary", j, sep = "_"), append(get(paste("mar_life", "30days_binary", j, sep = "_")), list(0 + (as.numeric(as.matrix(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))["mar_life"])) > i))))
}
}
# add all the new vectors to the df
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), cbind(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), do.call(cbind, get(paste("mar_life", "30days_binary", j, sep = "_")))))
}
# and rename the columns accordingly
for (j in c("norecreational", "recreational")) {
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% rename(!!!setNames(as.character(1:6), paste("mar_life", 1:6, sep = ""))) %>% select(-2))
assign(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), as.data.frame(cbind(scale(get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,1:12]), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))[,13:18])))
save(list = paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), file = paste0("data/", paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"), ".RData"))
}
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results/GJRM_results", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
# Distribution Regression: Recreational Legalization vs No recreational Legalization -----------------------------------------------------------
for (j in c("norecreational", "recreational")) {
assign(paste("X", j, "mar_life", sep = "_"), get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")) %>% select(-c(paste0("mar_life", 1:6), "recreational", "year", "age", "year_2017", "year_2019")))
save(list = paste("X", j, "mar_life", sep = "_"), file = paste0("data/", paste("X", j, "mar_life", sep = "_"), ".RData"))
}
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/Misreporting.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/DataPreparation.R", echo=TRUE)
rm(list = ls())
library(ggplot2)
library(Cairo)
library(labelled)
library(mnormt)
library(dplyr)
library(GJRM)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019_norecreational_mar_life.RData")
load("data/yrbs_data_combined_201520172019_recreational_mar_life.RData")
load("data/X_norecreational_mar_life.RData")
load("data/X_recreational_mar_life.RData")
invisible(lapply(list.files("results/GJRM_results", pattern = "\\.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
rm(list = ls())
library(dplyr)
library(GJRM)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019_norecreational_mar_life.RData")
load("data/yrbs_data_combined_201520172019_recreational_mar_life.RData")
load("data/X_norecreational_mar_life.RData")
load("data/X_recreational_mar_life.RData")
# GJRM Estimation: Equation (11) ------------------------------------------
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- list(paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium"),
paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + questions"))
assign(paste("mar_life", "gjrm", j, k, sep = "_"), GJRM::gjrm(formula = list(as.formula(formula[[1]]), as.formula(formula[[2]])),
data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_")), model = "BPO", margins = c("probit", "probit")))
save(list = paste("mar_life", "gjrm", j, k, sep = "_"), file = paste("results/GJRM_results", paste("mar_life", "gjrm", j, k, ".RData", sep = "_"), sep = "/"))
}
}
