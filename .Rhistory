dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
assign(paste("yrbs_data_combined_201520172019", i, "mar_life", sep = "_"), yrbs_data_combined_201520172019 %>%
dplyr::select(year, mar_life, sex, minority, median_income, unemployment_rate, recreational, mar_prices_medium, questions, tax_percent, age) %>%
na.omit() %>%
dplyr::filter(recreational == j) %>%
dplyr::mutate(age_18 = ifelse(age == 7, 1, 0)) %>%
dplyr::mutate(year_2019 = ifelse(year == 2019, 1, 0)) %>%
dplyr::mutate(year_2017 = ifelse(year == 2017, 1, 0)) %>%
dplyr::relocate(sex, .after = minority) %>% dplyr::relocate(age_18, .after = sex))
j <- j + 1
}
rm(list = ls())
library(dplyr)
library(labelled)
library(ggplot2)
library(Cairo)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019_norecreational_mar_life.RData")
load("data/yrbs_data_combined_201520172019_recreational_mar_life.RData")
load("data/X_norecreational_mar_life.RData")
load("data/X_recreational_mar_life.RData")
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/DR/mar_life_DR_norecreational_1_.RData")
old <- mar_life_DR_norecreational_1
rm(mar_life_DR_norecreational_1)
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/results/DR_results/mar_life_DR_norecreational_1_.RData")
old$coefficients
mar_life_DR_norecreational_1$coefficients
rm(old)
rm(mar_life_DR_norecreational_1)
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/DR/F_(1|1)_draws_mar_life.RData")
old <- F_(1|1)_draws_mar_life
old <- "F_(1|1)_draws_mar_life"
View(`F_(1|1)_draws_mar_life`)
View(`F_(1|1)_draws_mar_life`)
old <- 'F_(1|1)_draws_mar_life'
old <- `F_(1|1)_draws_mar_life`
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/results/Bootstrap_results/Y_nomisr/F_(1|1)_draws_mar_life.RData")
old
`F_(1|1)_draws_mar_life`
old[2,5]
`F_(1|1)_draws_mar_life`[2,5]
old[2,20]
old[50,5]
`F_(1|1)_draws_mar_life`[50,5]
source("functions/NoMisreporting_functions.R")
drug <- "mar_life"
`F_(1|1)`(1, drug)
rm(list = ls())
library(dplyr)
library(labelled)
library(ggplot2)
library(Cairo)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019_norecreational_mar_life.RData")
load("data/yrbs_data_combined_201520172019_recreational_mar_life.RData")
load("data/X_norecreational_mar_life.RData")
load("data/X_recreational_mar_life.RData")
source("functions/NoMisreporting_functions.R")
# DR Estimation: Equation (11) ------------------------------------------
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
assign(paste("mar_life", "DR", j, k, sep = "_"), glm(formula = formula, family = binomial(link = "probit"), data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))))
save(list = paste("mar_life", "DR", j, k, sep = "_"), file = paste("results/DR_results", paste("mar_life", "DR", j, k, ".RData", sep = "_"), sep = "/"))
}
}
`F_(1|1)`(1, drug)
drug <- "mar_life"
`F_(1|1)`(1, drug)
rm(list = ls())
library(dplyr)
library(labelled)
library(ggplot2)
library(Cairo)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019_norecreational_mar_life.RData")
load("data/yrbs_data_combined_201520172019_recreational_mar_life.RData")
load("data/X_norecreational_mar_life.RData")
load("data/X_recreational_mar_life.RData")
source("functions/NoMisreporting_functions.R")
# DR Estimation: Equation (11) ------------------------------------------
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
assign(paste("mar_life", "DR", j, k, sep = "_"), glm(formula = formula, family = binomial(link = "probit"), data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))))
save(list = paste("mar_life", "DR", j, k, sep = "_"), file = paste("results/DR_results", paste("mar_life", "DR", j, k, ".RData", sep = "_"), sep = "/"))
}
}
drug <- "mar_life"
`F_(1|1)`(1, drug)
"F_(1|1)" <- function(j, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
coefficients <- get(paste(drug, "DR_recreational", j, sep = "_"))$coefficients
mean(pnorm(cbind(X_mat %*% coefficients[1:x_length])))
}
`F_(1|1)`(1, drug)
"F_(1|1)" <- function(j, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
coefficients <- get(paste(drug, "DR_recreational", j, sep = "_"))$coefficients
mean(pnorm(cbind(X_mat %*% coefficients[1:x_length])))
}
`F_(1|1)`(1, drug)
"F_(1|1)" <- function(j, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium"))))
}
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
coefficients <- get(paste(drug, "DR_recreational", j, sep = "_"))$coefficients
mean(pnorm(cbind(X_mat %*% coefficients[1:x_length])))
}
`F_(1|1)`(1, drug)
`F_(1|1)`(12, drug)
`F_(1|1)`(2, drug)
`F_(1|1)`(3, drug)
`F_(1|1)`(4, drug)
`F_(1|1)`(5, drug)
rm(list = ls())
library(dplyr)
library(labelled)
library(ggplot2)
library(Cairo)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019_norecreational_mar_life.RData")
load("data/yrbs_data_combined_201520172019_recreational_mar_life.RData")
load("data/X_norecreational_mar_life.RData")
load("data/X_recreational_mar_life.RData")
source("functions/NoMisreporting_functions.R")
# DR Estimation: Equation (11) ------------------------------------------
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
assign(paste("mar_life", "DR", j, k, sep = "_"), glm(formula = formula, family = binomial(link = "probit"), data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))))
save(list = paste("mar_life", "DR", j, k, sep = "_"), file = paste("results/DR_results", paste("mar_life", "DR", j, k, ".RData", sep = "_"), sep = "/"))
}
}
# Plots -----------------------------------------------------------
p <- 0.9
drug <- "mar_life"
`F_(1|1)`(1, drug)
`F_(1|1)`(2, drug)
`F_(1|1)`(3, drug)
`F_(1|1)`(4, drug)
`F_(1|1)`(5, drug)
`B_(1|1)_restr`(1, p, drug)[1]
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/results/Bootstrap_results/Y_nomisr/F_(0|0)_draws_mar_life.RData")
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/results/Bootstrap_results/Y_nomisr/F_(0|1)_draws_mar_life.RData")
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/results/Bootstrap_results/Y_nomisr/F_(1|0)_draws_mar_life.RData")
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/results/Bootstrap_results/Y_nomisr/F_(1|1)_draws_mar_life.RData")
`B_(1|1)_restr`(1, p, drug)[1]
`B_(1|1)_restr`(2, p, drug)[1]
i
i <- 1
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/data/X_norecreational_mar_life.RData")
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/data/X_recreational_mar_life.RData")
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "questions"))))
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("questions"))))
n <- nrow(X_mat)
data <- get(paste("yrbs_data_combined_201520172019_norecreational", drug, sep = "_"))
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
j <- 1
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
coefficients
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula <- paste(paste(drug, y, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
y <- 1
formula <- paste(paste(drug, y, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
DR_res <- glm(formula = formula, family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
0.3793634
i
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
mult_weights_covariates
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
mult_weights_covariates
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula_mar <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
coefficients
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula <- paste(paste(drug, y, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
DR_res <- glm(formula = formula, family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
coefficients
head(X_mat)
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/data/X_norecreational_mar_life.RData")
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("questions"))))
head(X_mat)
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/X_norecreational_mar_life.RData")
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "questions"))))
head(X_mat)
head(X_norecreational_mar_life)
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/F_(1|1)_draws_mar_life.RData")
old <- `F_(1|1)_draws_mar_life`
old==`F_(1|1)_draws_mar_life`
load("/Users/lukaswermuth/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/results/Bootstrap_results/Y_nomisr/F_(1|1)_draws_mar_life.RData")
old==`F_(1|1)_draws_mar_life`
head(old)
head(`F_(1|1)_draws_mar_life`)
rm(list = ls())
library(dplyr)
library(labelled)
library(ggplot2)
library(Cairo)
library(doParallel)
setwd("~/Dropbox/GLW/replication_DRmisr")
load("data/yrbs_data_combined_201520172019_norecreational_mar_life.RData")
load("data/yrbs_data_combined_201520172019_recreational_mar_life.RData")
load("data/X_norecreational_mar_life.RData")
load("data/X_recreational_mar_life.RData")
source("functions/NoMisreporting_functions.R")
# DR Estimation: Equation (11) ------------------------------------------
for (j in c("norecreational", "recreational")) {
for (k in 1:6) {
formula <- paste(paste("mar_life", k, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
assign(paste("mar_life", "DR", j, k, sep = "_"), glm(formula = formula, family = binomial(link = "probit"), data = get(paste("yrbs_data_combined_201520172019", j, "mar_life", sep = "_"))))
save(list = paste("mar_life", "DR", j, k, sep = "_"), file = paste("results/DR_results", paste("mar_life", "DR", j, k, ".RData", sep = "_"), sep = "/"))
}
}
i <- 1
B <- 1
`F_(1|1)_b`(i, B, "mar_life")
###### "F_(1|1)" bootstrapped
# Function which allows to compute one bootstrapped function
# j: Input of the Survival function
# B: Bootstrap draws
"F_(1|1)_b" <- function(j, B, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
n <- nrow(X_mat)
data <- get(paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_"))
# Start cluster for parallel computing
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
res <- foreach(i = 1:B, .combine = 'c', .export = paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_")) %dopar% {
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula_mar <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
}
stopCluster(cl)
return(res)
}
`F_(1|1)_b`(i, B, "mar_life")
###### "F_(1|1)" bootstrapped
# Function which allows to compute one bootstrapped function
# j: Input of the Survival function
# B: Bootstrap draws
"F_(1|1)_b" <- function(j, B, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium"))))
}
n <- nrow(X_mat)
data <- get(paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_"))
# Start cluster for parallel computing
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
res <- foreach(i = 1:B, .combine = 'c', .export = paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_")) %dopar% {
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula_mar <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
}
stopCluster(cl)
return(res)
}
`F_(1|1)_b`(i, B, "mar_life")
`F_(1|1)_b`(i, 10, "mar_life")
# Bootstrap: Marijuana -----------------------------------------------------------
rm(list = ls())
library(GJRM)
library(parallel)
library(doParallel)
for (i in list.files("~/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/DR")) { # Load all the DR results and the data
load(file = paste("~/Dropbox/GLW/Workspace/YRBS_DR/DistributionRegression_201520172019_rec/DR", i, sep = "/"))
}
###### "F_(0|0)" bootstrapped
# Function which allows to compute one bootstrapped function
# j: Input of the Survival function
# B: Bootstrap draws
"F_(0|0)_b" <- function(j, B, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
n <- nrow(X_mat)
data <- get(paste("yrbs_data_combined_201520172019_norecreational", drug, sep = "_"))
# Start cluster for parallel computing
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
res <- foreach(i = 1:B, .combine = 'c', .export = paste("yrbs_data_combined_201520172019_norecreational", drug, sep = "_")) %dopar% {
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula_mar <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
}
stopCluster(cl)
return(res)
}
###### "F_(1|0)" bootstrapped
# Function which allows to compute one bootstrapped function
# j: Input of the Survival function
# B: Bootstrap draws
"F_(1|0)_b" <- function(j, B, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_norecreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
n <- nrow(X_mat)
data <- get(paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_"))
# Start cluster for parallel computing
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
res <- foreach(i = 1:B, .combine = 'c', .export = paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_")) %dopar% {
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula_mar <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
}
stopCluster(cl)
return(res)
}
###### "F_(0|1)" bootstrapped
# Function which allows to compute one bootstrapped function
# j: Input of the Survival function
# B: Bootstrap draws
"F_(0|1)_b" <- function(j, B, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
n <- nrow(X_mat)
data <- get(paste("yrbs_data_combined_201520172019_norecreational", drug, sep = "_"))
# Start cluster for parallel computing
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
res <- foreach(i = 1:B, .combine = 'c', .export = paste("yrbs_data_combined_201520172019_norecreational", drug, sep = "_")) %dopar% {
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula_mar <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
}
stopCluster(cl)
return(res)
}
###### "F_(1|1)" bootstrapped
# Function which allows to compute one bootstrapped function
# j: Input of the Survival function
# B: Bootstrap draws
"F_(1|1)_b" <- function(j, B, drug){
if (drug == "cig"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("mar_prices_medium", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
if (drug == "mar" | drug == "mar_life"){
X_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "questions"))))
Z_mat <- as.matrix(cbind(1, select(get(paste("X_recreational", drug, sep = "_")),-c("tax_percent", "mar_prices_medium"))))
}
n <- nrow(X_mat)
data <- get(paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_"))
# Start cluster for parallel computing
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
res <- foreach(i = 1:B, .combine = 'c', .export = paste("yrbs_data_combined_201520172019_recreational", drug, sep = "_")) %dopar% {
set.seed(i)
mult_weights_covariates <- sample(x = 1:n, size = n, replace = TRUE)
X_mat <- X_mat[mult_weights_covariates,]
Z_mat <- Z_mat[mult_weights_covariates,]
x_length <- ncol(X_mat)
z_length <- ncol(Z_mat)
formula_mar <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_mar_life <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + mar_prices_medium")
formula_cig <- paste(paste(drug, j, sep = ""), "~", "minority + sex + age_18 + median_income + unemployment_rate + tax_percent")
DR_res <- glm(formula = get(paste("formula", drug, sep = "_")), family = binomial(link = "probit"), data = data, weights = rmultinom(1, size = nrow(data), prob = rep(1/nrow(data), nrow(data))))
coefficients <- DR_res$coefficients
mean(pnorm(cbind(X_mat %*% coefficients)))
}
stopCluster(cl)
return(res)
}
i <- 1
B <- 2
`F_(1|1)_b`(i, B, "mar_life")
`F_(1|1)_b`(i, 10, "mar_life")
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/Misreporting.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/GLW/replication_DRmisr/code/MisreportingC.R", echo=TRUE)
?RCor
??RCor
